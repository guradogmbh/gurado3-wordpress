.custominput {
  border: 1px solid #ccc !important;
  border-radius: 3px !important;
  padding: 8px !important;
  display: block !important;
  width: 100% !important;
}

.custominput-label {
  position: relative;
  top: 5px;
}

.form-control {
  min-height: 35px !important;
}

.Input-Wrapper {
  flex: 0 0 80%;
  max-width: 80%;
}

.Input,
.custom-select {
  max-width: 600px;
  position: relative;
  height: 40px !important;
  font-size: 15px !important;
}

.tg-container {
  min-width: 320px !important;
}

.Input-text {
  display: block;
  margin: 0;
  color: inherit;
  width: 100%;
  font-family: inherit;
  border-radius: 4px;
  font-weight: inherit;
  border: none;
  border-radius: 0.4rem;
  transition: box-shadow var(--transitionDuration);
}

.Input-text::placeholder {
  color: black;
}

.Input-text:focus {
  outline: none;
  box-shadow: 0.1rem 0.1rem 0.2rem lightblue;
}

.alice-carousel {
  width: 100%;
  max-width: 970px;
  margin: 0 !important;
}
.alice-carousel__stage-item {
  cursor: pointer !important;
  text-align: center !important;
  /* margin-right: 5px !important; */
}
.alice-carousel__stage-item.__active {
  border-radius: 3px !important;
}

.Input-label {
  display: block;
  position: absolute;
  bottom: 50%;
  left: 1rem;
  color: black;
  font-family: inherit;
  font-weight: inherit;
  opacity: 0;
  transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
  transform-origin: 0 0;
  transition: opacity var(--inputTransitionDuration)
      var(--inputTransitionTF),
    transform var(--inputTransitionDuration) var(--inputTransitionTF),
    visibility 0ms var(--inputTransitionDuration)
      var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration)
      var(--inputTransitionTF);
}

.Input-text:placeholder-shown + .Input-label {
  visibility: hidden;
  z-index: -1;
}

.Input-text:not(:placeholder-shown) + .Input-label,
.Input-text:focus:not(:placeholder-shown) + .Input-label {
  visibility: visible;
  z-index: 1;
  opacity: 1;
  transform: translate3d(0, var(--labelTransformedPosY), 0)
    scale(var(--labelScaleFactor));
  transition: transform var(--inputTransitionDuration), visibility 0ms,
    z-index 0ms;
}

textarea::-webkit-input-placeholder {
  opacity: 1;
  color: black;
}

textarea:-moz-placeholder {
  /* Firefox 18- */
  color: black;
}

textarea::-moz-placeholder {
  /* Firefox 19+ */
  color: black;
}

textarea:-ms-input-placeholder {
  color: black;
}

textarea::placeholder {
  opacity: 1;
  color: black;
}
